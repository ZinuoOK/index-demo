/*
- 消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;
- 消除代码运行的一些不安全之处，保证代码运行的安全；
- 提高编译器效率，增加运行速度；
- 为未来新版本的Javascript做好铺垫。
"严格模式"体现了Javascript更合理、更安全、更严谨的发展方向，包括IE 10在内的主流浏览器，都已经支持它，许多大项目已经开始全面拥抱它。
另一方面，同样的代码，在"严格模式"中，可能会有不一样的运行结果；一些在"正常模式"下可以运行的语句，在"严格模式"下将不能运行。

脚本进入方法：use strict；仅对当前js文件有效；
执行环境进入方法：node --use_strict xxx.js，将对node执行的所有js文件实现严格模式

5.1 全局变量显式声明
在正常模式中，如果一个变量没有声明就赋值，默认是全局变量。严格模式禁止这种用法，全局变量必须显式声明。严格模式下，变量都必须先用var命令声明，然后再使用。
5.2 禁止this关键字指向全局对象
使用构造函数时，如果忘了加new，this不再指向全局对象，而是报错。
5.3禁止删除变量
严格模式下无法删除变量。只有configurable设置为true的对象属性，才能被删除。
5.4对象不能有重名的属性
正常模式下，如果对象有多个重名属性，最后赋值的那个属性会覆盖前面的值。严格模式下，这属于语法错误。
5.5函数不能有重名的参数

正常模式下，如果函数有多个重名的参数，可以用arguments[i]读取。严格模式下，这属于语法错误。
*/

'use strict';
console.log('index.js');